#include <string>
#include <vector>
#include<iostream>
#include<map>
#include<algorithm>
using namespace std;

vector<int> solution(int n, int min_position, int max_position, vector<int> positions) {
    vector<int> answer;
    int gap;
    map<int,int>m;
    //gap값 받기 
    if(max_position>=0 && min_position>=0){ //max 양 min 양
        gap=(max_position-min_position)/(n-1);
    }
    if(max_position>=0 && min_position<0){ //max양 min 음 
        gap=(max_position-min_position)/(n-1);
    }
    else if(max_position<0 && min_position<0){ //max음 min음 
        gap=(max_position-min_position)/(n-1);
    }
    //cout<<gap<<endl;
    for(int i=0;i<n;i++){
        m[min_position+gap*i]++;
    }

    for(int i=0;i<positions.size();i++){
        m[positions[i]]++;
    }
    for(auto it=m.begin();it!=m.end();it++){
        if(it->second ==1)//1번나왔다면 answer로
            answer.push_back(it->first);
    }
    sort(answer.begin(),answer.end());
    return answer;
}
