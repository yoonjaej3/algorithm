
3+[(5+1)-1]   true
3+([5+1])	     false
3+{(5+1}     false
3+[{(5+1)-1}+3]   true
{{}} false
[{()()}{}] true



#include <string>
#include <vector>
#include<iostream>
#include<stack>
using namespace std;
stack<char>s1;

int main() {
	string input;
	cin >> input;
	int answer = 1;
	for (int i = 0; i < input.size(); i++) {
		if (input[i]=='('|| input[i] == '{' || input[i] == '[' || input[i] == '}' || input[i] == ')' || input[i] == ']')
			s1.push(input[i]);
	}
	int check = 0;
	while (!s1.empty()) {
		char temp = s1.top();
		s1.pop();

		if (temp == '}' || temp == ']' || temp == ')') { //오른쪽 괄호가 나왔을때
			//대괄호일때 다음 괄호는 오중 ,오소,왼소 가능   
			//중괄호일때 //오소 왼중 가능
			//소괄호일때 //왼소 가능 
			check++;
			//cout << temp << endl;
			if (!s1.empty()) {
				//괄호의 순서
				if ((temp == ']' && !(s1.top() == '}' || s1.top() == ')' || s1.top() == '['))) {
					answer = 0;
					//cout << "확인1 " << temp << " " << s1.top() << endl;
					cout << answer << endl;
					return 0;
				}
				else if ((temp == '}' && !(s1.top() == ')' || s1.top() == '{'))) {
					answer = 0;
					//cout << "확인2 " << temp << " " << s1.top() << endl;
					cout << answer << endl;
					return 0;
				}
				else if ((temp == ')' && ! s1.top() == '(')) {
					answer = 0;
					//cout << "확인3 " <<temp<<" "<< s1.top() << endl;
					cout << answer << endl;
					return 0;
				}
			}
		}
		else { //왼쪽 괄호가 나왔을때
			check--;
			//cout << temp << endl;
			if (!s1.empty()) {
				//괄호의 순서
				if ((temp == '(' && !(s1.top() == '[' || s1.top() == '{' || s1.top() == ')' ))) {
					answer = 0;
					cout << answer << endl;
					return 0;
				}
				else if ((temp == '{' && !(s1.top() == '[' || s1.top() == '}'))) {
					answer = 0;
					cout << answer << endl;
					return 0;
				}
				else if ((temp == '[' && ! s1.top() == ']')) {
					answer = 0;
					cout << answer << endl;
					return 0;
				}
			}
		}
	}
	//cout << check << endl;
	if (!check)
		cout << answer << endl;
	else {
		answer = 0;
		cout << answer << endl;
	}

	return 0;
}
	return answer;
}
