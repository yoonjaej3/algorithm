#include<iostream>
#include<string>
#include<queue>
using namespace std;



int N, M;
int arr[101][101];
int dx[4] = { 0,0,1,-1 };
int dy[4] = { 1,-1,0,0 };
bool visited[101][101];
int answer = 100 * 100;


struct info {
	int x;
	int y;
	int cnt;
};



int main() {


	cin >> N >> M;
	for (int i = 0; i < N; i++) {
		string s;
		cin >> s;
		for (int j = 0; j < M; j++) {
			arr[i][j] = s[j] - '0';
		}
	}

	queue<info>Q;
	visited[0][0] = true;
	Q.push({ 0,0,1 });

	while (!Q.empty()) {
		int x = Q.front().x;
		int y = Q.front().y;
		int cnt = Q.front().cnt;
		Q.pop();
	

		
		if (x == N - 1 && y == M - 1) {
			if (answer > cnt) {

				answer = cnt;
			}
		}
		else {
			for (int i = 0; i < 4; i++) {
				int nx = x + dx[i];
				int ny = y + dy[i];
				if (0 <= nx && 0 <= ny && nx <= N - 1 && ny <= M - 1) {
					if (!visited[nx][ny] && arr[nx][ny] == 1) {
						visited[nx][ny] = true;
						Q.push({ nx, ny, cnt + 1 });
					}
				}
			}
		}


	}
	cout << answer << endl;
}
