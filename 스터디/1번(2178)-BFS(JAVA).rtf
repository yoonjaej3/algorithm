{\rtf1\ansi\ansicpg949\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 import java.util.LinkedList;\
import java.util.Queue;\
import java.util.Scanner;\
class info \{\
    int x;\
    int y;\
    int cnt;\
\
    info(int x,int y,int cnt)\{\
     this.x=x;\
     this.y=y;\
     this.cnt=cnt;\
    \}\
\}\
\
public class Main \{\
    public static int[][] arr=new int[101][101];\
    public static int[][] visited=new int[101][101];\
    public static void main(String[] args) \{\
        Scanner scan=new Scanner(System.in);\
        int N,M;\
\
        int answer=100*100;\
        int []dx = \{ 0,0,1,-1 \};\
        int []dy = \{ 1,-1,0,0 \};\
\
        N=scan.nextInt();\
        M=scan.nextInt();\
\
        for (int i = 0; i < N; i++) \{\
            String s;\
            s=scan.next();\
            for (int j = 0; j < s.length(); j++) \{\
                arr[i][j] = s.charAt(j) - '0';\
\
            \}\
        \}\
\
\
        Queue<info> Q=new LinkedList<info>();\
        visited[0][0] =1;\
        Q.offer(new info(0, 0, 1));\
\
        while (!Q.isEmpty()) \{\
            int x = Q.peek().x;\
            int y = Q.peek().y;\
            int cnt = Q.peek().cnt;\
            Q.remove();\
\
            if (x == N - 1 && y == M - 1) \{\
                if (answer > cnt) \{\
                    answer = cnt;\
                \}\
            \}\
            else \{\
                for (int i = 0; i < 4; i++) \{\
                    int nx = x + dx[i];\
                    int ny = y + dy[i];\
                    if (0 <= nx && 0 <= ny && nx <= N - 1 && ny <= M - 1) \{\
                        if (visited[nx][ny] ==0&& arr[nx][ny] == 1) \{\
                            visited[nx][ny] = 1;\
                            Q.add(new info(nx, ny,cnt+1));\
                        \}\
                    \}\
                \}\
            \}\
\
\
        \}\
        System.out.println(answer);\
    \}\
\
\
\}\
}