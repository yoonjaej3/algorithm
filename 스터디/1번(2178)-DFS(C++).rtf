{\rtf1\ansi\ansicpg949\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include<iostream>\
#include<string>\
using namespace std;\
\
\
\
int N, M;\
int arr[101][101];\
int dx[4] = \{ 0,0,1,-1 \};\
int dy[4] = \{ 1,-1,0,0 \};\
bool visited[101][101];\
int answer = 100 * 100;\
void dfs(int x, int y, int cnt) \{\
	if (x == N - 1 && y == M - 1) \{\
		if (answer > cnt) \{\
\
			answer = cnt;\
		\}\
	\}\
	else \{\
		for (int i = 0; i < 4; i++) \{\
			int nx = x + dx[i];\
			int ny = y + dy[i];\
\
			if (0 <= nx && 0 <= ny && nx <= N - 1 && ny <= M- 1) \{\
				if (!visited[nx][ny] && arr[nx][ny]==1) \{\
					visited[nx][ny] = true;\
					//cout << nx<<" " << ny<<" "<<cnt+1 << endl;\
					dfs(nx, ny, cnt + 1);\
					visited[nx][ny] = false;\
				\}\
			\}\
		\}\
\
	\}\
\}\
\
\
\
\
\
int main() \{\
\
\
	cin >> N >> M;\
	for (int i = 0; i < N; i++) \{\
		string s;\
		cin >> s;\
		for (int j = 0; j < M; j++) \{\
			arr[i][j] = s[j] - '0';\
		\}\
	\}\
	visited[0][0] = true;\
	dfs(0, 0, 1);\
	cout << answer << endl;\
\}\
}