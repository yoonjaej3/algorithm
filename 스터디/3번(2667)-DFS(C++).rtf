{\rtf1\ansi\ansicpg949\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset129 AppleSDGothicNeo-Regular;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #include<iostream>\
#include<algorithm>\
#include<string>\
#include<map>\
#include<vector>\
using namespace std;\
\
\
int arr[26][26];\
bool visited[26][26];\
int N;\
int dx[4] = \{ 0,0,1,-1 \};\
int dy[4] = \{ 1,-1,0,0 \};\
map<int, int>m;\
vector<int>answer;\
void dfs(int x,int y,int num) \{\
\
	for (int i = 0; i < 4; i++) \{\
		int nx = x + dx[i];\
		int ny = y + dy[i];\
		if (0 <= nx && 0 <= ny && nx <= N - 1 && ny <= N - 1) \{\
			if (!visited[nx][ny] && arr[nx][ny] == 1) \{\
				visited[nx][ny] = 1;\
				m[num]++;\
				dfs(nx, ny, num);\
			\}\
		\}\
	\}\
	return;\
\}\
\
\
\
\
\
\
int main() \{\
	cin >> N;\
	for (int i = 0; i < N; i++) \{\
		string s;\
		cin >> s;\
		for (int j = 0; j < N; j++) \{\
			arr[i][j] = s[j] - '0';\
		\}\
	\}\
\
	int num = 1;//
\f1 \'bc\'bd\'bc\'c7
\f0  
\f1 \'b9\'f8\'c8\'a3
\f0 \
\
	//
\f1 \'b8\'f0\'b5\'e7\'c1\'a1
\f0  
\f1 \'c5\'bd\'bb\'f6
\f0 \
	for (int i = 0; i < N; i++) \{\
		for (int j = 0; j < N; j++) \{\
			if (!visited[i][j] && arr[i][j]==1) \{\
				visited[i][j] = 1;\
				m[num]++;\
				dfs(i, j,num);\
				num++;\
			\}\
		\}\
	\}\
	\
\
	//map
\f1 \'c0\'bb
\f0  
\f1 \'c0\'cc\'bf\'eb\'c7\'cf\'bf\'a9
\f0  
\f1 \'b0\'a2\'b0\'a2\'c0\'c7
\f0  
\f1 \'b4\'dc\'c1\'f6\'b3\'bb
\f0  
\f1 \'c1\'fd\'c0\'c7
\f0  
\f1 \'b0\'b9\'bc\'f6
\f0  \
\
	for (auto it = m.begin(); it != m.end(); it++) \{\
		if (m[it->first] > 0) \{\
			answer.push_back(it->second);\
		\}\
	\}\
\
	sort(answer.begin(), answer.end());\
\
	cout << answer.size() << endl;\
	for (int i = 0; i < answer.size(); i++) \{\
		cout << answer[i] << endl;\
	\}\
\
\}\
}