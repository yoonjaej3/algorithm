#include<iostream>
#include<algorithm>
#include<string>
#include<map>
#include<vector>
using namespace std;


int arr[26][26];
bool visited[26][26];
int N;
int dx[4] = { 0,0,1,-1 };
int dy[4] = { 1,-1,0,0 };
map<int, int>m;
vector<int>answer;
void dfs(int x,int y,int num) {

	for (int i = 0; i < 4; i++) {
		int nx = x + dx[i];
		int ny = y + dy[i];
		if (0 <= nx && 0 <= ny && nx <= N - 1 && ny <= N - 1) {
			if (!visited[nx][ny] && arr[nx][ny] == 1) {
				visited[nx][ny] = 1;
				m[num]++;
				dfs(nx, ny, num);
			}
		}
	}
	return;
}






int main() {
	cin >> N;
	for (int i = 0; i < N; i++) {
		string s;
		cin >> s;
		for (int j = 0; j < N; j++) {
			arr[i][j] = s[j] - '0';
		}
	}

	int num = 1;//섹션 번호

	//모든점 탐색
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			if (!visited[i][j] && arr[i][j]==1) {
				visited[i][j] = 1;
				m[num]++;
				dfs(i, j,num);
				num++;
			}
		}
	}
	

	//map을 이용하여 각각의 단지내 집의 갯수 

	for (auto it = m.begin(); it != m.end(); it++) {
		if (m[it->first] > 0) {
			answer.push_back(it->second);
		}
	}

	sort(answer.begin(), answer.end());

	cout << answer.size() << endl;
	for (int i = 0; i < answer.size(); i++) {
		cout << answer[i] << endl;
	}

}
