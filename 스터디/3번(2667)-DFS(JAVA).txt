
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.Scanner;


public class Main {

    private static int [][]arr =new int[26][26];
    static Boolean [][]visited= new Boolean[26][26];
    private static int N;
    static int [] dx = { 0,0,1,-1 };
    static int []dy = { 1,-1,0,0 };
    static HashMap<Integer, Integer>m=new HashMap<Integer, Integer>();


    static void dfs(int x, int y, int num) {

        for (int i = 0; i < 4; i++) {
            int nx = x + dx[i];
            int ny = y + dy[i];
            if (0 <= nx && 0 <= ny && nx <= N - 1 && ny <= N - 1) {
                if (!visited[nx][ny] && arr[nx][ny] == 1) {
                    visited[nx][ny] = true;
                    m.put(num,m.get(num)+1);
                    dfs(nx, ny, num);
                }
            }
        }
        return;
    }

    public static <Descending> void main(String[] args) {
        ArrayList<Integer> answer=new ArrayList<Integer>();

        Scanner scan=new Scanner(System.in);
        N=scan.nextInt();
        for (int i = 0; i < N; i++) {
            String s;
            s=scan.next();
            for (int j = 0; j < N; j++) {
                arr[i][j] = s.charAt(j) - '0';
            }
        }

        for(int i=0;i<N;i++){
            for(int j=0;j<N;j++)
                visited[i][j]=false;
        }

        int num = 1;//섹션 번호

        //모든점 탐색
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                if (!visited[i][j] && arr[i][j]==1) {
                    visited[i][j] = true;
                    m.put(num,1);
                    dfs(i, j,num);
                    num++;
                }
            }
        }


        //map을 이용하여 각각의 단지내 집의 갯수

        for(int key:m.keySet()){
            answer.add(m.get(key));
        }
        Collections.sort(answer);

        System.out.println(answer.size());
        for(Integer i:answer){
            System.out.println(i);
        }
    }


}